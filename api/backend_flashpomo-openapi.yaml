openapi: "3.1.0"
info:
  title: "Generic API Documentation"
  description: "A generic OpenAPI specification for a RESTful API."
  version: "1.0.0"
servers:
  - url: "https://api.example.com"
paths:
  /auth/login:
    post:
      summary: "Authenticate user"
      operationId: "login"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /auth/register:
    post:
      summary: "Register new user"
      operationId: "register"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /resourceA/{id}:
    put:
      summary: "Update Resource A by ID"
      operationId: "updateResourceA"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceARequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    delete:
      summary: "Delete Resource A by ID"
      operationId: "deleteResourceA"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get Resource A by ID"
      operationId: "getResourceAById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResourceA"
  /resourceA:
    post:
      summary: "Create Resource A"
      operationId: "createResourceA"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceARequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get all Resource A"
      operationId: "getAllResourceA"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ResourceA"
  /resourceB/{id}:
    put:
      summary: "Update Resource B by ID"
      operationId: "updateResourceB"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceBRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    delete:
      summary: "Delete Resource B by ID"
      operationId: "deleteResourceB"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get Resource B by ID"
      operationId: "getResourceBById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int32"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResourceB"
  /resourceB:
    post:
      summary: "Create Resource B"
      operationId: "createResourceB"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceBRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get all Resource B"
      operationId: "getAllResourceB"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ResourceB"
  /resourceC/{id}:
    put:
      summary: "Update Resource C by ID"
      operationId: "updateResourceC"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceCRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseResourceCUpdateDTO"
    delete:
      summary: "Delete Resource C by ID"
      operationId: "deleteResourceC"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseCommonDTO"
    get:
      summary: "Get Resource C by ID"
      operationId: "getResourceCById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/GetResourceCByIdResponse"
  /resourceC:
    get:
      summary: "Get all Resource C"
      operationId: "getAllResourceC"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ResourceC"
  /resourceD/{id}:
    put:
      summary: "Update Resource D by ID"
      operationId: "updateResourceD"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceDRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    delete:
      summary: "Delete Resource D by ID"
      operationId: "deleteResourceD"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get Resource D by ID"
      operationId: "getResourceDById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /resourceD:
    post:
      summary: "Create Resource D"
      operationId: "createResourceD"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceDRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get all Resource D"
      operationId: "getAllResourceD"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /resourceE/{id}:
    put:
      summary: "Update Resource E by ID"
      operationId: "updateResourceE"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceERequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    post:
      summary: "Create Resource E by ID"
      operationId: "createResourceE"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceERequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get Resource E by ID"
      operationId: "getResourceEById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /resourceE:
    get:
      summary: "Get all Resource E"
      operationId: "getAllResourceE"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /resourceF/{id}:
    put:
      summary: "Update Resource F by ID"
      operationId: "updateResourceF"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceFRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    post:
      summary: "Create Resource F by ID"
      operationId: "createResourceF"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResourceFRequestDTO"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    delete:
      summary: "Delete Resource F by ID"
      operationId: "deleteResourceF"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
    get:
      summary: "Get Resource F by ID"
      operationId: "getResourceFById"
      parameters:
        - name: "id"
          in: "path"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
  /resourceF:
    get:
      summary: "Get all Resource F"
      operationId: "getAllResourceF"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ResponseEntity"
components:
  schemas:
    LoginRequestDTO:
      type: "object"
      properties:
        username:
          type: "string"
        password:
          type: "string"
    HttpHeaders:
      type: "object"
      properties: { }
    ResponseEntity:
      type: "object"
      properties:
        headers:
          $ref: "#/components/schemas/HttpHeaders"
      required:
        - "headers"
    RegisterRequestDTO:
      type: "object"
      properties:
        username:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        profileImage:
          type: "array"
          items:
            type: "string"
            format: "byte"
        createdAt:
          type: "string"
        status:
          type: "boolean"
        role:
          type: "string"
    ResourceARequestDTO:
      type: "object"
      properties:
        name:
          type: "string"
        description:
          type: "string"
        userId:
          type: "integer"
          format: "int32"
    ResourceA:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        name:
          type: "string"
        description:
          type: "string"
        coverImage:
          type: "array"
          items:
            type: "string"
            format: "byte"
        user:
          $ref: "#/components/schemas/User"
        status:
          type: "boolean"
    ResourceBRequestDTO:
      type: "object"
      properties:
        title:
          type: "string"
        content:
          type: "string"
        createdAt:
          type: "string"
        updatedAt:
          type: "string"
        resourceAId:
          type: "integer"
          format: "int32"
        status:
          type: "boolean"
    ResourceB:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int32"
        title:
          type: "string"
        content:
          type: "string"
        createdAt:
          type: "string"
        updatedAt:
          type: "string"
        resourceA:
          $ref: "#/components/schemas/ResourceA"
        status:
          type: "boolean"
    ResourceCRequestDTO:
      type: "object"
      properties:
        name:
          type: "string"
        email:
          type: "string"
        profileImage:
          type: "array"
          items:
            type: "string"
            format: "byte"
        password:
          type: "string"
        role:
          type: "string"
        updatedAt:
          type: "string"
    ResponseResourceCUpdateDTO:
      type: "object"
      properties:
        name:
          type: "string"
        email:
          type: "string"
        password:
          type: "string"
        profileImage:
          type: "array"
          items:
            type: "string"
            format: "byte"
        role:
          type: "string"
    ResponseCommonDTO:
      type: "object"
      properties:
        message:
          type: "string"
    GetResourceCByIdResponse:
      type: "object"
      properties:
        name:
          type: "string"
        email:
          type: "string"
    ResourceDRequestDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        price:
          type: "integer"
          format: "int32"
        title:
          type: "string"
        coverImage:
          type: "array"
          items:
            type: "string"
            format: "byte"
        description:
          type: "string"
        status:
          type: "boolean"
        userId:
          type: "integer"
          format: "int32"
    ResourceERequestDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        timestamp:
          type: "string"
        status:
          type: "boolean"
        userId:
          type: "integer"
          format: "int32"
    ResourceFRequestDTO:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        timestamp:
          type: "string"
        userId:
          type: "integer"
          format: "int32"
